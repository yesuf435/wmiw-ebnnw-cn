/**
 * 响应式布局示例样式表
 * 展示现代化 CSS Grid 和 Flexbox 布局技术
 * 用于商场系统的现代化升级参考
 */

/* ============================================
   基础重置和变量定义
   ============================================ */

:root {
    /* 颜色系统：主题配色方案 */
    --primary-color: #ff6b6b;
    --secondary-color: #ffa500;
    --dark-bg: #1a1a2e;
    --text-light: #ffffff;
    --text-dark: #333333;
    --border-color: rgba(255, 255, 255, 0.1);
    
    /* 间距系统：统一的间距规范 */
    --spacing-xs: 4px;
    --spacing-sm: 8px;
    --spacing-md: 16px;
    --spacing-lg: 24px;
    --spacing-xl: 32px;
    --spacing-xxl: 48px;
    
    /* 圆角系统 */
    --radius-sm: 4px;
    --radius-md: 8px;
    --radius-lg: 12px;
    --radius-xl: 16px;
    
    /* 响应式断点 */
    --breakpoint-mobile: 768px;
    --breakpoint-tablet: 1024px;
    --breakpoint-desktop: 1200px;
}

/* 基础盒模型设置 */
*,
*::before,
*::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

/* ============================================
   Flexbox 布局示例
   ============================================ */

/**
 * Flex 容器基础类
 * 用于创建弹性布局容器
 */
.flex-container {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-md);
}

/* 水平居中 */
.flex-center {
    display: flex;
    justify-content: center;
    align-items: center;
}

/* 水平两端对齐 */
.flex-between {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

/* 垂直排列 */
.flex-column {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-md);
}

/**
 * Flex 子项类
 * 控制子项在容器中的表现
 */
.flex-1 {
    flex: 1;
}

.flex-2 {
    flex: 2;
}

.flex-3 {
    flex: 3;
}

/* 自动增长但不缩小 */
.flex-grow {
    flex-grow: 1;
    flex-shrink: 0;
}

/* ============================================
   CSS Grid 布局示例
   ============================================ */

/**
 * Grid 基础布局
 * 自适应列数，最小宽度 250px
 */
.grid-auto-fit {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: var(--spacing-lg);
}

/**
 * Grid 固定列布局
 * 根据屏幕大小调整列数
 */
.grid-columns {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: var(--spacing-lg);
}

/* 三列布局 */
.grid-3-columns {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: var(--spacing-lg);
}

/* 两列布局 */
.grid-2-columns {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: var(--spacing-lg);
}

/**
 * Grid 区域布局示例
 * 用于复杂的页面布局
 */
.grid-layout {
    display: grid;
    grid-template-areas:
        "header header header"
        "sidebar main aside"
        "footer footer footer";
    grid-template-columns: 200px 1fr 250px;
    grid-template-rows: auto 1fr auto;
    gap: var(--spacing-lg);
    min-height: 100vh;
}

.grid-header {
    grid-area: header;
}

.grid-sidebar {
    grid-area: sidebar;
}

.grid-main {
    grid-area: main;
}

.grid-aside {
    grid-area: aside;
}

.grid-footer {
    grid-area: footer;
}

/* ============================================
   响应式卡片组件示例
   ============================================ */

/**
 * 卡片容器
 * 使用 Flexbox 实现响应式卡片布局
 */
.card-container {
    display: flex;
    flex-wrap: wrap;
    gap: var(--spacing-lg);
    padding: var(--spacing-lg);
}

/**
 * 卡片组件
 * 包含图片、标题、内容、操作按钮
 */
.card {
    flex: 1 1 calc(33.333% - var(--spacing-lg));
    min-width: 280px;
    background: white;
    border-radius: var(--radius-lg);
    overflow: hidden;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.card:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.15);
}

.card-image {
    width: 100%;
    height: 200px;
    object-fit: cover;
}

.card-content {
    padding: var(--spacing-md);
}

.card-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: var(--spacing-sm);
    color: var(--text-dark);
}

.card-description {
    color: #666;
    line-height: 1.6;
    margin-bottom: var(--spacing-md);
}

.card-actions {
    display: flex;
    gap: var(--spacing-sm);
    padding: var(--spacing-md);
    border-top: 1px solid #eee;
}

/* ============================================
   响应式导航栏示例
   ============================================ */

/**
 * 导航栏容器
 * 使用 Flexbox 实现响应式导航
 */
.navbar {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: var(--spacing-md) var(--spacing-lg);
    background: var(--dark-bg);
    color: var(--text-light);
}

.navbar-brand {
    font-size: 1.5rem;
    font-weight: bold;
}

.navbar-menu {
    display: flex;
    gap: var(--spacing-lg);
    list-style: none;
}

.navbar-item {
    padding: var(--spacing-sm) var(--spacing-md);
    cursor: pointer;
    transition: color 0.3s ease;
}

.navbar-item:hover {
    color: var(--primary-color);
}

/* ============================================
   响应式表单布局
   ============================================ */

/**
 * 表单容器
 * 使用 Grid 布局实现响应式表单
 */
.form-grid {
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    gap: var(--spacing-lg);
}

.form-group {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-sm);
}

.form-group-full {
    grid-column: 1 / -1;
}

.form-label {
    font-weight: 500;
    color: var(--text-dark);
}

.form-input,
.form-textarea,
.form-select {
    padding: var(--spacing-sm) var(--spacing-md);
    border: 1px solid #ddd;
    border-radius: var(--radius-sm);
    font-size: 1rem;
    transition: border-color 0.3s ease;
}

.form-input:focus,
.form-textarea:focus,
.form-select:focus {
    outline: none;
    border-color: var(--primary-color);
}

/* ============================================
   响应式媒体查询
   ============================================ */

/**
 * 平板设备 (768px - 1024px)
 */
@media (max-width: 1024px) {
    /* Grid 布局调整为三列 */
    .grid-columns {
        grid-template-columns: repeat(3, 1fr);
    }
    
    /* 卡片占比调整 */
    .card {
        flex: 1 1 calc(50% - var(--spacing-lg));
    }
    
    /* Grid 区域布局调整 */
    .grid-layout {
        grid-template-areas:
            "header header"
            "main main"
            "sidebar aside"
            "footer footer";
        grid-template-columns: 1fr 1fr;
    }
    
    /* 表单调整为单列 */
    .form-grid {
        grid-template-columns: 1fr;
    }
}

/**
 * 手机设备 (最大 768px)
 */
@media (max-width: 768px) {
    /* Grid 布局调整为单列 */
    .grid-columns,
    .grid-3-columns,
    .grid-2-columns {
        grid-template-columns: 1fr;
    }
    
    /* 卡片全宽显示 */
    .card {
        flex: 1 1 100%;
        min-width: 0;
    }
    
    /* Grid 区域布局调整为堆叠 */
    .grid-layout {
        grid-template-areas:
            "header"
            "main"
            "sidebar"
            "aside"
            "footer";
        grid-template-columns: 1fr;
    }
    
    /* 导航栏调整为垂直布局 */
    .navbar {
        flex-direction: column;
        gap: var(--spacing-md);
    }
    
    .navbar-menu {
        flex-direction: column;
        width: 100%;
        text-align: center;
    }
    
    /* 间距调整 */
    :root {
        --spacing-lg: 16px;
        --spacing-xl: 24px;
        --spacing-xxl: 32px;
    }
}

/**
 * 小屏幕手机 (最大 480px)
 */
@media (max-width: 480px) {
    /* 进一步缩小间距 */
    :root {
        --spacing-md: 12px;
        --spacing-lg: 16px;
        --spacing-xl: 20px;
    }
    
    /* 卡片内边距调整 */
    .card-content,
    .card-actions {
        padding: var(--spacing-sm);
    }
    
    /* 导航栏内边距 */
    .navbar {
        padding: var(--spacing-sm) var(--spacing-md);
    }
}

/* ============================================
   实用工具类
   ============================================ */

/* 隐藏工具类 */
.hidden {
    display: none !important;
}

/* 移动端隐藏 */
@media (max-width: 768px) {
    .hide-mobile {
        display: none !important;
    }
}

/* 桌面端隐藏 */
@media (min-width: 769px) {
    .hide-desktop {
        display: none !important;
    }
}

/* 文本对齐 */
.text-center {
    text-align: center;
}

.text-left {
    text-align: left;
}

.text-right {
    text-align: right;
}

/* 容器宽度限制 */
.container {
    width: 100%;
    max-width: var(--breakpoint-desktop);
    margin: 0 auto;
    padding: 0 var(--spacing-lg);
}

/* 响应式图片 */
.img-responsive {
    max-width: 100%;
    height: auto;
    display: block;
}

/* 圆形图片 */
.img-circle {
    border-radius: 50%;
}

/* 按钮基础样式 */
.btn {
    display: inline-block;
    padding: var(--spacing-sm) var(--spacing-lg);
    border: none;
    border-radius: var(--radius-sm);
    font-size: 1rem;
    cursor: pointer;
    transition: all 0.3s ease;
}

.btn-primary {
    background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
    color: white;
}

.btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(255, 107, 107, 0.3);
}

/* ============================================
   布局示例说明
   ============================================ */

/**
 * 使用示例：
 * 
 * 1. Flexbox 布局示例：
 *    <div class="flex-container">
 *        <div class="flex-1">内容1</div>
 *        <div class="flex-2">内容2（占2倍宽度）</div>
 *    </div>
 * 
 * 2. Grid 自适应布局：
 *    <div class="grid-auto-fit">
 *        <div>卡片1</div>
 *        <div>卡片2</div>
 *        <div>卡片3</div>
 *    </div>
 * 
 * 3. 响应式卡片：
 *    <div class="card-container">
 *        <div class="card">
 *            <img src="..." class="card-image" alt="">
 *            <div class="card-content">
 *                <h3 class="card-title">标题</h3>
 *                <p class="card-description">描述</p>
 *            </div>
 *        </div>
 *    </div>
 * 
 * 4. 响应式表单：
 *    <form class="form-grid">
 *        <div class="form-group">
 *            <label class="form-label">姓名</label>
 *            <input type="text" class="form-input">
 *        </div>
 *        <div class="form-group form-group-full">
 *            <label class="form-label">备注</label>
 *            <textarea class="form-textarea"></textarea>
 *        </div>
 *    </form>
 */
